@page "/"
@inject HttpClient http


@if (tarefas == null)
{
    <AlertaComponent Menssagem="Ainda Não tem tarefas"></AlertaComponent>
}
else if (!tarefas.Any())
{
    <AlertaComponent Menssagem="Carregando..................."></AlertaComponent>
else
{
    foreach (var item in tarefas)
    {

        <table class="table">
            <thead>
                <tr>
                    <th>Ação</th>
                    <th scope="col">ID</th>
                    <th scope="col">Descrição</th>
                    <th scope="col">Concluido</th>
                    <th scope="col">DataCriação</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><button class="btn btn-danger" @onclick="(()=> RemoverTarefa(item.ID))">EXCLUIR</button></td>
                    <td>@item.ID</td>
                    <td>@item.Descricao</td>
                    <td><input type="checkbox" @bind="@item.Concluido" />@item.Concluido</td>
                    <td>@item.DataCriacao</td>
                </tr>
            </tbody>
        </table>



    }
}

@if (tarefas != null)
{
    <div class="form-group">
        <label>Tarefa</label>
        <input type="text" placeholder="Informe a Tarfefa" @bind="novaTarefa" />
        <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Regitrar Tarfea</button>
    </div>
}

@code{

public class Tarefa
{
    public Guid ID { get; set; }
    public string Descricao { get; set; }
    public bool Concluido { get; set; }
    public DateTime DataCriacao { get; set; }

}
private string novaTarefa = "";
public void AdicionarNovaTarefa()
{


    tarefas.Add(new Tarefa
    {
        DataCriacao = DateTime.Now,
        Descricao = novaTarefa,
        ID = Guid.NewGuid()

    });
}
private List<Tarefa> tarefas = new List<Tarefa>();
private Tarefa tarefa = new Tarefa();

public void RemoverTarefa(Guid id)
{
    tarefas.Remove(tarefas.First(a => a.ID == id));
}




protected override async Task OnInitializedAsync()
{
    tarefas = await http.GetFromJsonAsync<List<Tarefa>>("Dados/tarefas.json");
}

}
