@page "/Tarefas"
@inject HttpClient http

<h1>@Titulo</h1>
@if (tarefas == null)
{
    <AlertComponent Menssagem="Ainda Não tem tarefas"></AlertComponent>
}
else if (!tarefas.Any())
{
    <AlertComponent Menssagem="Não Tem Dados"></AlertComponent>
}
else
{
    foreach (var item in tarefas)
    {

        <table class="table">
            <thead>
                <tr>
                    <th>Ação</th>
                    <th scope="col">ID</th>
                    <th scope="col">Descrição</th>
                    <th scope="col">Concluido</th>
                    <th scope="col">DataCriação</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><button class="btn btn-danger" @onclick="(() => RemoverTarefa(item.ID))">EXCLUIR</button></td>
                    <td>@item.ID</td>
                    <td>@item.Descricao</td>
                    <td><input type="checkbox" @bind="@item.Concluido" />@item.Concluido</td>
                    <td>@item.DataCriacao</td>
                </tr>
            </tbody>
        </table>
    }






    @if (tarefas != null)
    {
        <div class="form-group">
            <label>Tarefa</label>
            <input type="text" placeholder="Informe a Tarfefa" @bind="novaTarefa" />
            <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Regitrar Tarfea</button>
        </div>
    }
}
@code{

    [Parameter]
    public List<Tarefa> tarefas { get; set; }
     [Parameter]
    public string Titulo { get; set; }

  @*  private List<Tarefa> tarefas = new List<Tarefa>();*@
    private Tarefa tarefa = new Tarefa();

    private string novaTarefa = "";
    public void AdicionarNovaTarefa()
    {
        tarefas.Add(new Tarefa
        {
            DataCriacao = DateTime.Now,
            Descricao = novaTarefa,
            ID = Guid.NewGuid()

        });
    }


    public void RemoverTarefa(Guid id)
    {
        tarefas.Remove(tarefas.First(a => a.ID == id));
    }






}
